openapi: 3.0.1
info:
  title: Washop/Login-Cellphone
  version: 1.0.0
servers:
  - url: https://api.wabow.com/
paths:
  /register/otp:
    post:
      tags:
      - 驗證碼
      summary: 發送註冊用驗證碼簡訊
      parameters:
      - $ref: 'base.yaml#/components/parameters/SessionId'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestCellphone'
              - $ref: '#/components/schemas/RequestCaptcha'
              - required:
                - cellphone
                - captcha
        required: true
      responses:
        200:
          description: 簡訊 otp 發送成功
          content:
            application/json:
              schema:
                $ref: 'base.yaml#/components/schemas/Ok'
        403:
          $ref: 'base.yaml#/components/responses/AccountAccessError'
        422:
          $ref: 'base.yaml#/components/responses/FormError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
  /local/register:
    post:
      tags:
      - 本站登入
      summary: 本站使用者註冊
      parameters:
      - $ref: 'base.yaml#/components/parameters/SessionId'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestEmail'
              - $ref: '#/components/schemas/RequestCellphone'
              - $ref: '#/components/schemas/RequestOtp'
              - $ref: '#/components/schemas/RequestName'
              - $ref: '#/components/schemas/RequestPassword'
              - $ref: '#/components/schemas/RequestCaptcha'
              - required:
                - email
                - cellphone
                - otp
                - name
                - password
                - captcha
        required: true
      responses:
        200:
          description: 使用者註冊成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
        409:
          $ref: '#/components/responses/AccountExistError'
        422:
          $ref: 'base.yaml#/components/responses/FormError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
  /local/login:
    post:
      tags:
      - 本站登入
      summary: 本站使用者帳密登入
      parameters:
      - $ref: 'base.yaml#/components/parameters/SessionId'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestCellphone'
              - $ref: '#/components/schemas/RequestPassword'
              - $ref: '#/components/schemas/RequestCaptcha'
              - required:
                - cellphone
                - password
                - captcha
        required: true
      responses:
        200:
          description: 使用帳號密碼登入成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
        403:
          $ref: 'base.yaml#/components/responses/AccountAccessError'
        409:
          description: 帳密錯誤 / 帳號不存在
          content:
            application/json:
              schema:
                $ref: 'base.yaml#/components/schemas/LoginFail'
        422:
          $ref: 'base.yaml#/components/responses/FormError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
  /local/password/forget:
    post:
      tags:
      - 本站登入
      summary: 發送驗證碼 email
      parameters:
      - $ref: 'base.yaml#/components/parameters/SessionId'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestCellphone'
              - $ref: '#/components/schemas/RequestCaptcha'
              - required:
                - cellphone
                - captcha
        required: true
      responses:
        200:
          description: email 寄送成功
          content:
            application/json:
              schema:
                $ref: 'base.yaml#/components/schemas/Ok'
        403:
          $ref: 'base.yaml#/components/responses/AccountAccessError'
        422:
          $ref: 'base.yaml#/components/responses/FormError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
  /local/password/reset:
    patch:
      tags:
      - 本站登入
      summary: 密碼重設
      parameters:
      - $ref: 'base.yaml#/components/parameters/SessionId'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestOtp'
              - $ref: '#/components/schemas/RequestPassword'
              - $ref: '#/components/schemas/RequestCaptcha'
              - required:
                - otp
                - password
                - captcha
        required: true
      responses:
        200:
          description: 密碼重設成功
          content:
            application/json:
              schema:
                $ref: 'base.yaml#/components/schemas/Ok'
        403:
          $ref: 'base.yaml#/components/responses/AccountAccessError'
        422:
          $ref: 'base.yaml#/components/responses/FormError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
  /facebook/redirect:
    get:
      tags:
      - Facebook 登入
      summary: Facebook 重新導向
      parameters:
      - $ref: 'base.yaml#/components/parameters/SessionId'
      - $ref: '#/components/parameters/Original'
      responses:
        302:
          description: 導向至 Facebook 登入頁面
          content: {}
  /facebook/callback:
    get:
      tags:
      - Facebook 登入
      summary: 透過 Redirect Code 取得 Access Token (設定為 redirect_uri)
      responses:
        200:
          $ref: '#/components/responses/ThirdPartyLogin'
        201:
          $ref: '#/components/responses/ThirdPartyRegister'
        403:
          $ref: 'base.yaml#/components/responses/AccountAccessError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
  /facebook/register:
    post:
      tags:
      - Facebook 登入
      summary: Facebook 使用者註冊
      parameters:
      - $ref: 'base.yaml#/components/parameters/SessionId'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestEmail'
              - $ref: '#/components/schemas/RequestCellphone'
              - $ref: '#/components/schemas/RequestOtp'
              - $ref: '#/components/schemas/RequestName'
              - $ref: '#/components/schemas/RequestCaptcha'
              - required:
                - email
                - cellphone
                - otp
                - name
                - captcha
        required: true
      responses:
        200:
          $ref: '#/components/responses/ThirdPartyLogin'
        422:
          $ref: 'base.yaml#/components/responses/FormError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
  /line/redirect:
    get:
      tags:
      - LINE 登入
      summary: LINE 重新導向 (正式實作請按照 LINE 規格修正)
      parameters:
      - $ref: 'base.yaml#/components/parameters/SessionId'
      - $ref: '#/components/parameters/Original'
      responses:
        302:
          description: 導向至 LINE 登入頁面
          content: {}
  /line/callback:
    get:
      tags:
      - LINE 登入
      summary: 透過 Redirect Code 取得 Access Token (設定為 redirect_uri)
      responses:
        200:
          $ref: '#/components/responses/ThirdPartyLogin'
        201:
          $ref: '#/components/responses/ThirdPartyRegister'
        403:
          $ref: 'base.yaml#/components/responses/AccountAccessError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
  /line/register:
    post:
      tags:
      - LINE 登入
      summary: LINE 使用者註冊
      parameters:
      - $ref: 'base.yaml#/components/parameters/SessionId'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestEmail'
              - $ref: '#/components/schemas/RequestCellphone'
              - $ref: '#/components/schemas/RequestOtp'
              - $ref: '#/components/schemas/RequestName'
              - $ref: '#/components/schemas/RequestCaptcha'
              - required:
                - email
                - cellphone
                - otp
                - name
                - captcha
        required: true
      responses:
        200:
          $ref: '#/components/responses/ThirdPartyLogin'
        422:
          $ref: 'base.yaml#/components/responses/FormError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
  /google/redirect:
    get:
      tags:
      - Google 登入
      summary: Google 重新導向 (正式實作請按照 Google 規格修正)
      parameters:
      - $ref: 'base.yaml#/components/parameters/SessionId'
      - $ref: '#/components/parameters/Original'
      responses:
        302:
          description: 導向至 Google 登入頁面
          content: {}
  /google/callback:
    get:
      tags:
      - Google 登入
      summary: 透過 Redirect Code 取得 Access Token (設定為 redirect_uri)
      responses:
        200:
          $ref: '#/components/responses/ThirdPartyLogin'
        201:
          $ref: '#/components/responses/ThirdPartyRegister'
        403:
          $ref: 'base.yaml#/components/responses/AccountAccessError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
  /google/register:
    post:
      tags:
      - Google 登入
      summary: Google 使用者註冊
      parameters:
      - $ref: 'base.yaml#/components/parameters/SessionId'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestEmail'
              - $ref: '#/components/schemas/RequestCellphone'
              - $ref: '#/components/schemas/RequestOtp'
              - $ref: '#/components/schemas/RequestName'
              - $ref: '#/components/schemas/RequestCaptcha'
              - required:
                - email
                - cellphone
                - otp
                - name
                - captcha
        required: true
      responses:
        200:
          $ref: '#/components/responses/ThirdPartyLogin'
        422:
          $ref: 'base.yaml#/components/responses/FormError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
  /login/renew:
    post:
      tags:
      - 延長時效
      summary: 重新簽發 token
      responses:
        200:
          description: 成功交換 JWT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshJWT'
        401:
          $ref: 'base.yaml#/components/responses/AuthError'
        403:
          $ref: 'base.yaml#/components/responses/AccountAccessError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
      security:
        - Bearer: []
  /member/cellphone:
    patch:
      tags:
      - 會員個資
      summary: 變更電話
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestCellphone'
              - $ref: '#/components/schemas/RequestOtp'
              - $ref: '#/components/schemas/RequestCaptcha'
              - required:
                - cellphone
                - otp
                - captcha
        required: true
      responses:
        200:
          $ref: 'base.yaml#/components/responses/UpdateOk'
        401:
          $ref: 'base.yaml#/components/responses/AuthError'
        409:
          $ref: '#/components/responses/AccountExistError'
        422:
          $ref: 'base.yaml#/components/responses/FormError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
      security:
      - Bearer: []
  /member/password:
    patch:
      tags:
      - 會員個資
      summary: 變更密碼
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - properties:
                  newPassword:
                    type: string
                    description: 新密碼
                    format: password
                  oldPassword:
                    type: string
                    description: 原始密碼
                    format: password
              - $ref: '#/components/schemas/RequestCaptcha'
              - required:
                - newPassword
                - oldPassword
                - captcha
        required: true
      responses:
        200:
          $ref: 'base.yaml#/components/responses/UpdateOk'
        401:
          $ref: 'base.yaml#/components/responses/AuthError'
        422:
          $ref: 'base.yaml#/components/responses/FormError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
      security:
      - Bearer: []
  /member/profile:
    get:
      tags:
      - 會員個資
      summary: 取得會員資料
      responses:
        200:
          description: 成功取得會員資料
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        401:
          $ref: 'base.yaml#/components/responses/AuthError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
      security:
      - Bearer: []
    patch:
      tags:
      - 會員個資
      summary: 更新會員資料
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestEmail'
              - $ref: '#/components/schemas/RequestName'
              - properties:
                  gender:
                    type: string
                    description: 性別
                    enum:
                    - female
                    - male
                    - none
                  birthday:
                    type: string
                    description: 生日
                    format: date
                  attrs:
                    type: object
                    properties:
                      isAgreeEdm:
                        type: boolean
                        description: 訂閱電子報
              - $ref: '#/components/schemas/RequestCaptcha'
              - required:
                - attrs
                - captcha
        required: true
      responses:
        200:
          $ref: 'base.yaml#/components/responses/UpdateOk'
        401:
          $ref: 'base.yaml#/components/responses/AuthError'
        409:
          $ref: '#/components/responses/AccountExistError'
        422:
          $ref: 'base.yaml#/components/responses/FormError'
        429:
          $ref: 'base.yaml#/components/responses/TooManyRequests'
      security:
      - Bearer: []
components:
  parameters:
    Original:
      name: original
      in: query
      description: 網站當前路徑 (從社交平台轉回時前往正確路徑)
      required: true
      schema:
        type: string
  schemas:
    AccountExistError:
      type: object
      properties:
        exception:
          type: string
          description: 錯誤種類
          example: Washop\Login\Exceptions\AccountExistException
        message:
          type: string
          description: 訊息
          example: Email / Cellphone 已經註冊過
    JWT:
      allOf:
      - $ref: '#/components/schemas/RefreshJWT'
      - type: object
        properties:
          refreshToken:
            type: string
            description: JWT
            example: eyJ0eXAiOiJ...
    RefreshJWT:
      type: object
      properties:
        payload:
          type: object
          properties:
            iat:
              type: integer
              description: token 發行時間
              example: 1537346375
            exp:
              type: integer
              description: token 到期時間 (24分鐘)
              example: 1537691975
            sub:
              type: string
              description: 會員 ID
              example: 1
            nbf:
              type: string
              description: 在這之前都無法適用該 JWT
              example: 1537691975
            iss:
              type: string
              description: 發行者
              example: washop-v2
            jti:
              type: string
              description: JWT ID
              example: AAA
          description: JWT 標準的 payload
        accessToken:
          type: string
          description: JWT
          example: eyJ0eXAiOiJ...
    Original:
      type: object
      properties:
        original:
          description: 網站當前路徑(從社交平台轉回時前往正確路徑)
          type: string
          example: default
    Profile:
      allOf:
      - $ref: 'base.yaml#/components/schemas/MaskUser'
      - type: object
        properties:
          levelCode:
            type: string
            enum:
            - normal
            - vip
            example: normal
          gender:
            type: string
            description: 性別
            example: none
            enum:
            - female
            - male
            - none
          birthday:
            type: string
            description: 生日
            format: date
          attrs:
            type: object
            description: 布林屬性
            properties:
              isAgreeEdm:
                type: boolean
                description: 訂閱電子報
                example: true
              isTesting:
                type: boolean
                description: 線上測試會員
                example: true
    RequestEmail:
      type: object
      properties:
        email:
          type: string
          description: Email
          example: test@test.com
    RequestCellphone:
      type: object
      properties:
        cellphone:
          type: string
          description: 台灣手機號碼 / 09 + 8 位數字
          example: '0912345678'
    RequestOtp:
      type: object
      properties:
        otp:
          type: string
          description: 驗證碼 / 6 位數字 / 開頭可為 0
          example: '012345'
    RequestName:
      type: object
      properties:
        name:
          type: string
          description: 規則按照 7-11 SIN 規範 / 中日韓統一表意文字 2 ~ 16 位數 / 英文 4 ~ 32位數
          example: Marty
    RequestPassword:
      type: object
      properties:
        password:
          type: string
          description: 密碼 / 8 ~ 32位數 / 不得使用純數字 / 不得使用部分 email / 防止簡易密碼
          format: password
          example: password
    RequestCaptcha:
      type: object
      properties:
        captcha:
          type: string
          description: Captcha 驗證機制
          example: captcha
    ThirdPartyUserId:
      type: object
      properties:
        thirdPartyUserId:
          type: string
          description: 第三方 userId / bigInt
          example: thirdPartyUserId
    ThirdPartyContext:
      allOf:
      - $ref: '#/components/schemas/ThirdPartyUserId'
      - $ref: '#/components/schemas/RequestEmail'
      - $ref: '#/components/schemas/RequestName'
  responses:
    AccountExistError:
      description: 帳號已存在
      content:
       application/json:
         schema:
           $ref: '#/components/schemas/AccountExistError'
    ThirdPartyLogin:
      description: 登入成功
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/JWT'
            - $ref: '#/components/schemas/Original'
    ThirdPartyRegister:
      description: 註冊會員
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ThirdPartyContext'
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
